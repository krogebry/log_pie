
input {
  syslog {
    type => "pchef_nginx"
    port => <%= @port %>
  }
}

filter {
  grok {
    type => "pchef_nginx"
    pattern => "%{IP:clientip} %{DATA:ident} %{DATA:remote_user} \[%{HTTPDATE:timestamp}\]  \"(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{DATA:httpversion})?|-)\" %{INT:status} \"%{DATA:request_time}\" %{INT:body_bytes_sent} \"%{DATA:referer}\" \"%{DATA:user_agent}\" \"%{IP:upstream_addr}:%{INT:upstream_port}\" \"%{INT:upstream_status}\" \"%{DATA:upstream_response_time}\" \"%{DATA:chef_version}\" \"%{DATA:http_x_ops_sign}\" \"%{DATA:http_x_ops_userid}\" \"%{TIMESTAMP_ISO8601:http_x_ops_timestamp}\" \"%{DATA:http_x_ops_content_hash}\" %{INT:request_length}"
  }

  mutate {
    type => "pchef_nginx"
    replace => [ "@timestamp", "%{@fields.http_x_ops_timestamp}" ]
  }

  grep {
    type => "pchef_nginx"
    tags => [ "_grokparsefailure" ]
    negate => true
  }
}

output {
  #stdout { debug => true debug_format => "json"}
  elasticsearch { 
    host => "<%= @es_node %>" 
    cluster => "<%= @es_cluster %>"
  }
}

